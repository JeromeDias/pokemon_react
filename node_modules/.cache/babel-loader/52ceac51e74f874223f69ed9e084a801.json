{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\pokemon_react\\\\src\\\\PrivateRoute.tsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => React.createElement(Route, Object.assign({}, rest, {\n  render: props => {\n    const isAuthenticated = AuthenticationService.isAuthentified;\n\n    if (!isAuthenticated) {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: '/login'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}));\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/xampp/htdocs/pokemon_react/src/PrivateRoute.tsx"],"names":["React","Route","Redirect","AuthenticationService","PrivateRoute","component","Component","rest","props","isAuthenticated","isAuthentified","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KACnB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EAAGC,KAAD,IAAW;AAClC,UAAMC,eAAe,GAAGN,qBAAqB,CAACO,cAA9C;;AACA,QAAI,CAACD,eAAL,EAAsB;AACpB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEE,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WAAO,oBAAC,SAAD,oBAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAWA,eAAeJ,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthenticationService from './services/authentication-service';\r\n  \r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\r\n  <Route {...rest} render={(props) => {\r\n    const isAuthenticated = AuthenticationService.isAuthentified;\r\n    if (!isAuthenticated) {    \r\n      return <Redirect to={{ pathname: '/login' }} />\r\n    }\r\n  \r\n    return <Component {...props} />\r\n  }} />\r\n);\r\n  \r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}