{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\pokemon_react\\\\src\\\\components\\\\pokemon-card.tsx\";\nimport React, { useState } from \"react\";\nimport \"./pokemon-card.css\";\n\nconst PokemonCard = ({\n  pokemon,\n  borderColor = \"#009688\"\n}) => {\n  const [color, setColor] = useState();\n\n  const showBorder = () => {\n    setColor(borderColor);\n  };\n\n  const hideBorder = () => {\n    setColor(\"#f5f5f5\");\n  };\n\n  const formatDate = date => {\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n  };\n\n  const formatType = type => {\n    let color;\n\n    switch (type) {\n      case \"Feu\":\n        color = \"red lighten-1\";\n        break;\n\n      case \"Eau\":\n        color = \"blue lighten-1\";\n        break;\n\n      case \"Plante\":\n        color = \"green lighten-1\";\n        break;\n\n      case \"Insecte\":\n        color = \"brown lighten-1\";\n        break;\n\n      case \"Normal\":\n        color = \"grey lighten-3\";\n        break;\n\n      case \"Vol\":\n        color = \"blue lighten-3\";\n        break;\n\n      case \"Poison\":\n        color = \"deep-purple accent-1\";\n        break;\n\n      case \"Fée\":\n        color = \"pink lighten-4\";\n        break;\n\n      case \"Psy\":\n        color = \"deep-purple darken-2\";\n        break;\n\n      case \"Electrik\":\n        color = \"lime accent-1\";\n        break;\n\n      case \"Combat\":\n        color = \"deep-orange\";\n        break;\n\n      default:\n        color = \"grey\";\n        break;\n    }\n\n    return `chip ${color}`;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"col s6 m4\",\n    onMouseEnter: showBorder,\n    onMouseLeave: hideBorder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card horizontal\",\n    style: {\n      borderColor: borderColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: pokemon.picture,\n    alt: pokemon.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"card-stacked\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, pokemon.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, formatDate(pokemon.created))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, pokemon.created.toString())), pokemon.types.map(type => React.createElement(\"span\", {\n    key: type,\n    className: formatType(type),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, type))))));\n};\n\nexport default PokemonCard;","map":{"version":3,"sources":["C:/xampp/htdocs/pokemon_react/src/components/pokemon-card.tsx"],"names":["React","useState","PokemonCard","pokemon","borderColor","color","setColor","showBorder","hideBorder","formatDate","date","getDate","getMonth","getFullYear","formatType","type","picture","name","created","toString","types","map"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport \"./pokemon-card.css\";\r\nimport PokemonList from '../'\r\n\r\ntype Props = {\r\n  pokemon: Pokemon;\r\n  borderColor?: string;\r\n};\r\n\r\nconst PokemonCard: FunctionComponent<Props> = ({\r\n  pokemon,\r\n  borderColor = \"#009688\"\r\n}) => {\r\n  const [color, setColor] = useState<string>();\r\n  const showBorder = () => {\r\n    setColor(borderColor);\r\n  };\r\n\r\n  const hideBorder = () => {\r\n    setColor(\"#f5f5f5\");\r\n  };\r\n\r\n  const formatDate = (date: Date): string => {\r\n    return `${date.getDate()}/${date.getMonth()+ 1}/${date.getFullYear()}`;\r\n  };\r\n\r\n  const formatType = (type: string): string => {\r\n    let color: string;\r\n\r\n    switch (type) {\r\n      case \"Feu\":\r\n        color = \"red lighten-1\";\r\n        break;\r\n      case \"Eau\":\r\n        color = \"blue lighten-1\";\r\n        break;\r\n      case \"Plante\":\r\n        color = \"green lighten-1\";\r\n        break;\r\n      case \"Insecte\":\r\n        color = \"brown lighten-1\";\r\n        break;\r\n      case \"Normal\":\r\n        color = \"grey lighten-3\";\r\n        break;\r\n      case \"Vol\":\r\n        color = \"blue lighten-3\";\r\n        break;\r\n      case \"Poison\":\r\n        color = \"deep-purple accent-1\";\r\n        break;\r\n      case \"Fée\":\r\n        color = \"pink lighten-4\";\r\n        break;\r\n      case \"Psy\":\r\n        color = \"deep-purple darken-2\";\r\n        break;\r\n      case \"Electrik\":\r\n        color = \"lime accent-1\";\r\n        break;\r\n      case \"Combat\":\r\n        color = \"deep-orange\";\r\n        break;\r\n      default:\r\n        color = \"grey\";\r\n        break;\r\n    }\r\n\r\n    return `chip ${color}`;\r\n  };\r\n  return (\r\n    <div\r\n      className=\"col s6 m4\"\r\n      onMouseEnter={showBorder}\r\n      onMouseLeave={hideBorder}\r\n    >\r\n      <div className=\"card horizontal\" style={{ borderColor: borderColor }}>\r\n        <div className=\"card-image\">\r\n          <img src={pokemon.picture} alt={pokemon.name} />\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n            <p>\r\n              <small>{formatDate(pokemon.created)}</small>\r\n            </p>\r\n            <p>\r\n              <small>{pokemon.created.toString()}</small>\r\n            </p>\r\n            {pokemon.types.map(type => (\r\n              <span key={type} className={formatType(type)}>{type}</span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n"]},"metadata":{},"sourceType":"module"}