{"ast":null,"code":"export default class PokemonService {\n  static getPokemons() {\n    return fetch('http://localhost:3001/pokemons').then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static getPokemon(id) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n\n  static updatePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static deletePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static addPokemon(pokemon) {\n    delete pokemon.created;\n    return fetch(`http://localhost:3001/pokemons/`, {\n      method: 'POST',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static searchPokemon(term) {\n    return fetch(`http://localhost:3001/pokemons?q=${term}`).then(response => response.json());\n  }\n\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error) {\n    console.error(error);\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/pokemon_react/src/services/pokemon-service.ts"],"names":["PokemonService","getPokemons","fetch","then","response","json","catch","error","handleError","getPokemon","id","data","isEmpty","updatePokemon","pokemon","method","body","JSON","stringify","headers","deletePokemon","addPokemon","created","searchPokemon","term","Object","keys","length","console"],"mappings":"AAEA,eAAe,MAAMA,cAAN,CAAqB;AAElC,SAAOC,WAAP,GAAyC;AACvC,WAAOC,KAAK,CAAC,gCAAD,CAAL,CACJC,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJC,KAFI,CAEEC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAFX,CAAP;AAGD;;AAED,SAAOE,UAAP,CAAkBC,EAAlB,EAAqD;AACnD,WAAOR,KAAK,CAAE,kCAAiCQ,EAAG,EAAtC,CAAL,CACJP,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJF,IAFI,CAECQ,IAAI,IAAI,KAAKC,OAAL,CAAaD,IAAb,IAAqB,IAArB,GAA4BA,IAFrC,EAGJL,KAHI,CAGEC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAHX,CAAP;AAID;;AAED,SAAOM,aAAP,CAAqBC,OAArB,EAAwD;AACpD,WAAOZ,KAAK,CAAE,kCAAiCY,OAAO,CAACJ,EAAG,EAA9C,EAAgD;AACxDK,MAAAA,MAAM,EAAE,KADgD;AAExDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAFkD;AAGxDK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAH+C,KAAhD,CAAL,CAKNhB,IALM,CAKDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALX,EAMNC,KANM,CAMAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CANT,CAAP;AAOH;;AAEH,SAAOa,aAAP,CAAqBN,OAArB,EAAmD;AACjD,WAAOZ,KAAK,CAAE,kCAAiCY,OAAO,CAACJ,EAAG,EAA9C,EAAiD;AAC3DK,MAAAA,MAAM,EAAE,QADmD;AAE3DI,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFkD,KAAjD,CAAL,CAINhB,IAJM,CAIDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJX,EAKNC,KALM,CAKAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CALT,CAAP;AAMD;;AAED,SAAOc,UAAP,CAAkBP,OAAlB,EAAsD;AACpD,WAAOA,OAAO,CAACQ,OAAf;AAEA,WAAOpB,KAAK,CAAE,iCAAF,EAAoC;AAC9Ca,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAFwC;AAG9CK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHqC,KAApC,CAAL,CAKNhB,IALM,CAKDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALX,EAMNC,KANM,CAMAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CANT,CAAP;AAOD;;AAED,SAAOgB,aAAP,CAAqBC,IAArB,EAAuD;AACrD,WAAOtB,KAAK,CAAE,oCAAmCsB,IAAK,EAA1C,CAAL,CACNrB,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,CAAP;AAGD;;AACC,SAAOO,OAAP,CAAeD,IAAf,EAAsC;AACpC,WAAOc,MAAM,CAACC,IAAP,CAAYf,IAAZ,EAAkBgB,MAAlB,KAA6B,CAApC;AACD;;AAED,SAAOnB,WAAP,CAAmBD,KAAnB,EAAqC;AACjCqB,IAAAA,OAAO,CAACrB,KAAR,CAAcA,KAAd;AACH;;AAzDiC","sourcesContent":["import Pokemon from \"../models/pokemon\";\r\n \r\nexport default class PokemonService {\r\n \r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    return fetch('http://localhost:3001/pokemons')\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n  }\r\n \r\n  static getPokemon(id: number): Promise<Pokemon|null> {\r\n    return fetch(`http://localhost:3001/pokemons/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(error => this.handleError(error));\r\n  }\r\n\r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon>{\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`,{\r\n          method: 'PUT',\r\n          body: JSON.stringify(pokemon),\r\n          headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n  }\r\n \r\nstatic deletePokemon(pokemon: Pokemon): Promise<{}>{\r\n  return fetch(`http://localhost:3001/pokemons/${pokemon.id}` ,{\r\n    method: 'DELETE',\r\n    headers: { 'Content-Type': 'application/json'}\r\n  })\r\n  .then(response => response.json())\r\n  .catch(error => this.handleError(error));\r\n}\r\n\r\nstatic addPokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n  delete pokemon.created;\r\n\r\n  return fetch(`http://localhost:3001/pokemons/` ,{\r\n    method: 'POST',\r\n    body: JSON.stringify(pokemon),\r\n    headers: { 'Content-Type': 'application/json'}\r\n  })\r\n  .then(response => response.json())\r\n  .catch(error => this.handleError(error));\r\n}\r\n\r\nstatic searchPokemon(term: string): Promise<Pokemon[]> {\r\n  return fetch(`http://localhost:3001/pokemons?q=${term}`)\r\n  .then(response => response.json())\r\n  \r\n}\r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n\r\n  static handleError(error: Error):void{\r\n      console.error(error)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}